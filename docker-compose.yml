version: '3.4'

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    network_mode: bridge
    links:
      - appone
      - apptwo
    depends_on:
      - gateway

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-ssl
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge
    depends_on:
      - nginx-proxy

  gateway:
    image: jwilder/whoami
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=dotnetcore.tk
      - VIRTUAL_PORT=80,8000
    network_mode: bridge
    depends_on:
      - appone
      - apptwo
  
  appone:
    image: ${DOCKER_REGISTRY-}dockerproxyappone
    build:
      context: .
      dockerfile: app1/Docker.Proxy.AppOne/Dockerfile
    network_mode: bridge

  apptwo:
    image: ${DOCKER_REGISTRY-}dockerproxyapptwo
    build:
      context: .
      dockerfile: app2/Docker.Proxy.AppTwo/Dockerfile
    network_mode: bridge

volumes:
  conf:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/volume/conf
  vhost:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/volume/vhost
  html:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/volume/html
  dhparam:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/volume/dhparam
  certs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/volume/certs

